

class VBaseDetector
{
public:
        virtual ConstructDetector()=0;
        virtual G4LogicalVolume* GetSDLogVol(){;}
        //virtual G4String GetDetLogName() {;}
        //virtual G4LogicalVolume* GetDetLogical(){;}
        virtual void Place(rot, trans,logical,"logname" , physWorld) =0;
}


class DetectorConstruction: public G4VUserDetectorConstruction
{
        virtual G4VPhysicalVolume* Construct();    
        virtual void ConstructSDandField();

}
G4VPhysicalVolume* DetectorConstruction::Construct()
{
	//setdetector fDetector = new SNSDetector(); //VBaseDetector* fDetector
    fDetector->ConstructDetector();
    
    return G4VPhysicalVolume* physWorld = new G4VPVPlacement(...world ...);

    fDetector->place(rot, trans, physWorld);

}



class SNSDetector: public VBaseDetector
{
    virtual ConstructDetector();//
    virtual G4LogicalVolume* GetSDLogVol(){ return ...}
    virtual void Place(rot, trans, physWorld);

}

void SNSDetector::ConstructDetector()
{
  //construct assembly, logical, "logname", Calling part construction.

}

void SNSDetector::place(rot, trans, logical,"logname", physWorld)
{
  //check if constructed
  if(!logVol) this->ConstructDetector();
  .......

}

